const messages_1 = require("./messages");
const farRef_1 = require("./farRef");
/**
 * Created by flo on 17/01/2017.
 */
class CommMedium {
    constructor() {
        this.pendingActors = new Map();
        this.connectedActors = new Map();
        this.pendingConnectionId = 0;
    }
    connectRemote(sender, address, port, messageHandler, promisePool) {
        var promiseAllocation = promisePool.newPromise();
        var connection = require('socket.io-client')('http://' + address + ":" + port);
        var connectionId = this.pendingConnectionId;
        this.pendingActors.set(connectionId, connection);
        this.pendingConnectionId += 1;
        connection.on('connect', () => {
            connection.emit('message', new messages_1.ConnectRemoteMessage(sender, promiseAllocation.promiseId, connectionId));
        });
        connection.on('message', (data) => {
            if (sender instanceof farRef_1.ServerFarReference) {
                messageHandler.dispatch(data);
            }
            else {
                messageHandler.dispatch(JSON.parse(data));
            }
        });
        return promiseAllocation.promise;
    }
    resolvePendingConnection(actorId, connectionId) {
        var connection = this.pendingActors.get(connectionId);
        this.connectedActors.set(actorId, connection);
    }
}
exports.CommMedium = CommMedium;
//# sourceMappingURL=commMedium.js.map